{"version":3,"file":"output.js","sourceRoot":"","sources":["../../../../src/cli/services/dev/output.ts"],"names":[],"mappings":"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","sourcesContent":["import {PartnersURLs} from './urls.js'\nimport {AppInterface} from '../../models/app/app.js'\nimport {FunctionExtension, ThemeExtension, UIExtension} from '../../models/app/extensions.js'\nimport {OrganizationApp} from '../../models/organization.js'\nimport {buildAppURLForWeb} from '../../utilities/app/app-url.js'\nimport {partnersFqdn} from '@shopify/cli-kit/node/environment/fqdn'\nimport {renderInfo} from '@shopify/cli-kit/node/ui'\nimport {outputContent, outputInfo, outputToken} from '@shopify/cli-kit/node/output'\n\nexport async function outputUpdateURLsResult(\n  updated: boolean,\n  urls: PartnersURLs,\n  app: Omit<OrganizationApp, 'apiSecretKeys' | 'apiKey'> & {apiSecret?: string},\n) {\n  const dashboardURL = await partnersURL(app.organizationId, app.id)\n  if (app.newApp) {\n    renderInfo({\n      headline: `For your convenience, we've given your app a default URL: ${urls.applicationUrl}.`,\n      body: `You can update your app's URL anytime in the ${dashboardURL}. But once your app is live, updating its URL will disrupt merchant access.`,\n    })\n  } else if (!updated) {\n    renderInfo({\n      headline: `To make URL updates manually, you can add the following URLs as redirects in your ${dashboardURL}:`,\n      body: {list: {items: urls.redirectUrlWhitelist}},\n    })\n  }\n}\n\nexport function outputAppURL(storeFqdn: string, url: string) {\n  const title = url.includes('localhost') ? 'App URL' : 'Shareable app URL'\n  const heading = outputToken.heading(title)\n  const appURL = buildAppURLForWeb(storeFqdn, url)\n  outputInfo(outputContent`\\n\\n${heading}\\n\\n  ${appURL}\\n`)\n}\n\nexport function outputDevConsoleURL(url: string) {\n  const title = 'Shopify extension dev console URL'\n  const heading = outputToken.heading(title)\n  const devConsoleURL = `${url}/extensions/dev-console`\n  outputInfo(outputContent`${heading}\\n\\n  ${devConsoleURL}\\n`)\n}\n\nexport function outputExtensionsMessages(app: AppInterface, storeFqdn: string, url: string) {\n  outputUIExtensionsURLs(app.extensions.ui, storeFqdn, url)\n  outputFunctionsMessage(app.extensions.function)\n  outputThemeExtensionsMessage(app.extensions.theme)\n}\n\nfunction outputUIExtensionsURLs(extensions: UIExtension[], storeFqdn: string, url: string) {\n  if (extensions.length > 0) {\n    outputDevConsoleURL(url)\n  }\n\n  for (const extension of extensions) {\n    const message = extension.previewMessage(url, storeFqdn)\n    if (message) outputInfo(message)\n  }\n}\n\nfunction outputFunctionsMessage(extensions: FunctionExtension[]) {\n  if (extensions.length === 0) return\n  const names = extensions.map((ext) => ext.configuration.name)\n  const heading = outputToken.heading(names.join(', '))\n  const message = `These extensions need to be deployed to be manually tested.\nOne testing option is to use a separate app dedicated to staging.`\n  outputInfo(outputContent`${heading}\\n${message}\\n`)\n}\n\nfunction outputThemeExtensionsMessage(extensions: ThemeExtension[]) {\n  if (extensions.length === 0) return\n  for (const extension of extensions) {\n    const message = extension.previewMessage('', '')\n    if (message) outputInfo(message)\n  }\n}\n\nasync function partnersURL(organizationId: string, appId: string): Promise<string> {\n  return outputContent`${outputToken.link(\n    `Partners Dashboard`,\n    `https://${await partnersFqdn()}/${organizationId}/apps/${appId}/edit`,\n  )}`.value\n}\n"]}